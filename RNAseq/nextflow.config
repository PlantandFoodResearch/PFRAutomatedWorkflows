/*IMPORTANT INFORMATION: This script is a configuration file need to be used when you run the nextflow script RNAseq. In this script you could change some variable (not in the pipeline script).*/

/*There are different profiles: - standard profile, contains all the basic parameter like the location of the Fastq files, the options of trimmomatic command, the output directory.... */
/*                              - IndexN profile, if you have not the index for these data you need to build it, so you need to use the IndexN profile  */
/*                              - IndexE profile, if you already have the index, put the address of his location in the IndexE profile, and call IndexE when you run the pipeline, it will save time */
/*				- sample profile, if you want to test the pipeline only on sample of your data, more small than your data, call the sample profile when you run the pipeline */
/*				- sampleN profile, if you want to run the pipeline on your full/complete data, call the sampleN profile when you run the pipeline */
/*                              - DESeq profile, if you want to make the Differential Expression statistics with DESeq packages, you could change parameter in profile Standard for common options and in DESeq profile for specific option */
/*                              - EdgeR profile, if you want to make the Differential Expression statistics with EdgeR packages, you could change parameter in profile Standard for common options and in EdgeR profile for specific option  */
/*                              - DESeq,EdgeR profile, if you want to make the Differential Expression statistics with both DESeq and EdgeR packages, you could change write in the command line the two profiles */
/* Profiles are addable, so you need to specify at least one of each condition. For example when you want to run the script your line command need to be like that: ' nextflow run pipelineRNA -profile standard,IndexE,sample ' */
/* In this example you inform standard parameter (mandatory) and you inform that you have already an index and you want to run the pipeline on sample of your data. On other case you need to inform other options like '-profile standard,IndexN,sampleN'  so you could make some combinations but always need to specify at least three profiles */


profiles{


 standard{

	params{
		email='carole.smerilli@plantandfood.co.nz'

		namefastqfileR1= '_R1.fastq'    /* You need to define the structure of the name of fastq file: for example DA8_sub_R1.fastq, write '_R1.fastq', if it is DQ8_R1.fq, write '_R1.fq'. So write without the ID */ 
		namefastqfileR2= '_R2.fastq'    /* Paired read so for Read and Forward read */
		species= 'Potatoes'            /* Please inform the species of your data */
		IDexp='1050'
		conditionsfile= "${baseDir}/targets.txt"  /* Please inform the location of the file which contains a table with the name of the file, ID and conditions. */
		reads= "/workspace/cfpcxs/PFRAutomatedWorkflows/RNAseq/Potatoes/*_R{1,2}.fastq"  /* Inform the location of your fastq files and put the right structure '_R{1,2}' to collect them. */
		annot= "/workspace/cfpcxs/PFRAutomatedWorkflows/RNAseq/Potatoes/PGSC_DM_V403_fixed_representative_genes.gff" /* Defines the path for the annotation file */
		genome= "/workspace/cfpcxs/PFRAutomatedWorkflows/RNAseq/Potatoes/PGSC_DM_v4.03_pseudomolecules_ALL.fasta"  /* Defines the part for the reference genome file (fasta format) */
		
		
                                                                      
		/*You need to inform the reference genome file for contamination*/
	        /* It will be needed/needing for sort the reads and remove the contaminated reads */
		/* Put the pathway of each database contaminatiom genome (fasta fornat) with their index (db format): if no index, you need to create them with the SortMeRNA command */
	
		SMRNA="/software/bioinformatics/sortmerna-2.1-linux-64"
                DB="${SMRNA}/rRNA_databases"
                INDEX="${SMRNA}/index"

		SORTMERNADB="\
${DB}/silva-bac-16s-id90.fasta,${INDEX}/silva-bac-16s-db:\
${DB}/silva-bac-23s-id98.fasta,${INDEX}/silva-bac-23s-db:\
${DB}/silva-arc-16s-id95.fasta,${INDEX}/silva-arc-16s-db:\
${DB}/silva-arc-23s-id98.fasta,${INDEX}/silva-arc-23s-db:\
${DB}/silva-euk-18s-id95.fasta,${INDEX}/silva-euk-18s-db:\
${DB}/rfam-5s-database-id98.fasta,${INDEX}/rfam-5s-db:\
${DB}/rfam-5.8s-database-id98.fasta,${INDEX}/rfam-5.8s-db"

		/* Trimmomatic command: you need to inform the options. */

		Adapterfile="/software/bioinformatics/Trimmomatic-0.36/adapters/TruSeq2-PE.fa"		
		Pclip=':2:30:10' /* Pclip variable is Illuminaclip option */
		SlidWindow=':5:20' /*  SlidingWindow: performs a sliding window trimming approach: clips the read once the average quality within the window falls below a threshold: here for 5 bases, it is required an min average of 20 quality score */
		MinL=':50' /*MINLEN: Drop the read if it is below a specified length: here if it's below 50bp. Because too small reads are difficult to aligned */

		/*If you build the index, maybe you want to inform some options to the STAR command. */

		StarAddition='--sjdbGTFtagExonParentTranscript Parent' /* You could put on the same line all the options you want in the StarAddition variable. I don't want any options just put empty variable ' ' */

		/*Alignment with STAR command require some parameter, you could change them below. */

		SegmMin=15 
		JunctMin=40
		GapMax=20000
		IntronMax=20000
		outQSconvAdd=-31
		
		/*Parameters for the database where the genes and counts will be stored.*/

		userDB='cfphxd_rnaseq'
		passwordDB='yIPGRMPrDjtgUTeu'
		nameDB='cfphxd_rnaseq_counts' 
		
		/*Parameters for the Differential Expression statistics*/
		featuresToRemove="--featuresToRemove alignment_not_unique,ambiguous,no_feature,not_aligned,too_low_aQual" /*Sentences need to remove in the HTSeq counts files (at the end)*/
		factorOfInterest="--varInt 'group'"    /*Name of the column in target file which inform the conditions*/
		ReferenceCondition="--condRef 'control'"    /*Name of the condition control, for example 'CT', 'WT', 'HT 0day' */
		BlockingFactor=""    /* '--batch 'day' : adjustment variable to use as a batch effect, must be a column of the target file ("day" for example, by default batch effect is NULL so don't write anything in this variable if no batch effect needs to be taken into account) */
		Alpha="--alpha 0.05" /* significance threshold applied to the adjusted p-values to select the differentially expressed features (default is 0.05)*/
		pAdjustMethod="--pAdjutsMethod 'BH'" /* pAdjustMethod: p-value adjustment method for multiple testing ("BH" by default, "BY" or any value of p.adjust.methods) */
		Colors="--colors 'dodgerblue,firebrick1,MediumVioletRed,SpringGreen,chartreuse,cyan,darkorchid,darkorange'" /* colors used for the figures (one per biological condition), 4 are given by default */
		ForceCairoGraph="--forceCairoGraph FALSE" /* TRUE to force the use of cairo with options(bitmapType="cairo") */		

		/*Differents scripts needing by some process in the pipeline. You need to load the directory with all these scripts 'Scripts' before run the pipeline.*/
		scriptCheck="${baseDir}/Scripts/checkscript.r"
		scriptTQC="${baseDir}/Scripts/testquality.sh"
		scriptSQL="${baseDir}/Scripts/testSQLD.sh"		
		scriptTabC="${baseDir}/Scripts/testPython.py"
		scriptDESeq="${baseDir}/Scripts/template_script_DESeq2_CL.r"
		scriptEdgeR="${baseDir}/Scripts/template_script_edgeR_CL.r"

		/*Inform the location of output directories where the return data will be stored. */ 
		outdir1= "${baseDir}/010.QualityControlR1"
		outdir2= "${baseDir}/020.TrimmingData1"
		outdir3= "${baseDir}/030.BamFiles1"
		outdir4= "${baseDir}/040.Statistics1"
		outdir5= "${baseDir}/050.Index1"
		outdir6= "${baseDir}/060.Counts1"
		outdir7= "${baseDir}/070.DifferentialExpression1"
		
	 	

	}	      

/*In all process you need to use lsf executor to avoid the overused of the front back*/
/* For all the Quality Control process, you use the same module and same output directory. */		
	process{
		executor='lsf'
		withLabel: QC {
			module = 'FastQC'
			
			}
		}
 	}

  IndexN{ 
	params {
                skip='1'
		 }

        }

/*If index is already existing, you need to inform his address of location. */

  IndexE{
	params {
		skip='0'
		index="/workspace/cfpcxs/PFRAutomatedWorkflows/RNAseq/results31/indexDir"
		}
	}

/*If you want to made sample, you could choose the size of you sample, just change the variable 'size' below . */
  sample {
	 params{
		A='1'
		subd1='.R1.fq' 
		subd2='.R2.fq'
		size=5000
		}
	}

  sampleN {
         params{
                A='0'
		subd1='_R1.fastq'
                subd2='_R2.fastq'
                }
	   }	
  
  DESeq {
	params{
		DESeq='1'
		 FitType="--fitType 'parametric'" /*(if use of DESeq2) type of model for the mean-dispersion relationship ("parametric" by default, or "local" or "mean");(if use of DESeq2) type of model for the mean-dispersion relationsh$
                CooksCutoff="--cooksCutoff TRUE" /*(if use of DESeq2) TRUE (default) of FALSE to execute or not the detection of the outliers */
                IndependentFiltering="--independentFiltering TRUE" /*(if use of DESeq2) TRUE (default) of FALSE to execute or not the independent filtering */
 		TypeTrans="--typeTrans 'VST'" /* (if use of DESeq2) method of transformation of the counts for the clustering and the PCA (default is "VST" for Variance Stabilizing Transformation, or "rlog" for Regularized Log Transform$
                LocFunc="--locfunc 'median'" /* (if use of DESeq2) function used for the estimation of the size factors (default is "median", or "shorth" from the genefilter package) */
		}
	}

  EdgeR {
	params{
		EdgeR='1'
		CPMCutoff="--cpmCutoff 1" /*(if use of edgeR) counts-per-million cut-off to filter low counts (default is 1, set to 0 to disable filtering) */
		GeneSelection="--gene.selection 'pairwise'" /* (if use of edgeR) method of selection of the features for the MultiDimensional Scaling plot ("pairwise" by default or common) */
		NormalizationMethod="--normalizationMethod 'TMM'" /*(if use of edgeR) normalization method in calcNormFactors(): "TMM" (default), "RLE" (DESeq method) or "upperquartile" */
		}
	}
 

}
